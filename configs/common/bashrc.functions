# vi: set ft=sh expandtab tabstop=4 shiftwidth=4:
if test -n "${bashrc_functions_guard-}" ; then return 0 ; fi
bashrc_functions_guard=1
iecho ".bashrc.functions"


pushdv() {
    echo "cd $@"
    pushd "$@" >/dev/null
}
popdv() {
    popd "$@" >/dev/null
    echo "cd $(pwd)"
}

if (! type --  >/dev/null 2>&1) && (test -x "/Applications/Vim.app/Contents/MacOS/Vim") ; then
    gvim() {
        "/Applications/Vim.app/Contents/MacOS/Vim" -g "$@"
    }
fi

# Private keys
addkey_() {
    ssh-add 2>/dev/null 1>/dev/null
    if test $? -eq 2 ; then
        echo "No authentication agent so cannot add key"
        return 2
    fi
    if ssh-add -l | grep -F -q "$1" ; then
        echo "Key already added"
    else
        ssh-add "$1"
    fi
}
rmkey_() {
    ssh-add 2>/dev/null 1>/dev/null
    if test $? -eq 2 ; then
        echo "No authentication agent so nothing to remove"
        return 2
    fi
    if ssh-add -l | grep -F -q "$1" ; then
        ssh-add -d "$1"
    else
        echo "Key already removed"
    fi
}

## gavin@sir
sirkey() {
    addkey_ "${SIRKEY}"
}
rmsirKey() {
    rmkey_ "${SIRKEY}"
}
## download@sir
sirdkey() {
    addkey_ "${SIRDKEY}"
}
rmsirdKey() {
    rmkey_ "${SIRDKEY}"
}
## download@sir
gavSird2Key() {
    addkey_ "${SIRD2KEY}"
}
rmsird2Key() {
    rmkey_ "${SIRD2KEY}"
}
## gavinbt@kdesvn
kdekey() {
    addkey_ "${KDEKEY}"
}
rmkdeKey() {
    rmkey_ "${KDEKEY}"
}
## gavin@polly
pollykey() {
    addkey_ "${POLLYKEY}"
}
rmpollyKey() {
    rmkey_ "${POLLYKEY}"
}
## gavinbt@maths
mathskey() {
    addkey_ "${MATHSKEY}"
}
rmmathsKey() {
    rmkey_ "${MATHSKEY}"
}
fsckey() {
    addkey_ "${FSCKEY}"
}
rmfscKey() {
    rmkey_ "${FSCKEY}"
}
netsockey() {
    addkey_ "${NETSOCKEY}"
}
rmnetsocKey() {
    rmkey_ "${NETSOCKEY}"
}
zutkey() {
    addkey_ "${ZUTKEY}"
}
rmzutKey() {
    rmkey_ "${ZUTKEY}"
}
gavinkey() {
    addgpgkey_ "${GPG_KEYID}"
}

ismounted() {
    mount | grep -Fq " on ${1} type "
}

mountenc() {
    if ismounted "${ENCRYPTED_DIR}" ; then
        echo "Already mounted"
    else
        encfs "${ENCRYPTED_BASE_DIR}" "${ENCRYPTED_DIR}"
    fi
}

umountenc() {
    if ismounted "${ENCRYPTED_DIR}" ; then
        until fusermount -u "${ENCRYPTED_DIR}" 2>/dev/null ; do
            sleep 1
        done
    else
        echo "Already unmounted"
    fi
}

cdlink() { cd "$(readlink "$1")" ; }
p() { if test $# -gt 0 ; then "$@" | less ; fi ; }
h() { p history ; }
hlast() {
    history | tail -n "$(expr "$1" + 1)" | head -n "$1"
}

for i_ in $HOSTS ; do
    if test -r "${HOME}/.bashrc.functions.${i_}" ; then
        . "${HOME}/.bashrc.functions.${i_}"
    fi
done
unset i_
