import Data.Char
import Data.List
import Data.String
import Data.Monoid
import Control.Monad
import Control.Applicative
import Control.Concurrent
--import Control.Concurrent.Async
--import Control.Parallel
--import Control.Monad.IO.Class

-- You must set your prompt to a lambda, it's a law.
:set prompt "Î»> "

:set -fno-warn-unused-imports
:def hlint \s -> return $ ":! hlint \"" ++ s ++ "\""
let escape arg = "'" ++ concatMap (\c -> if c == '\'' then "'\"'\"'" else [c]) arg ++ "'"
:def! hoogle return . (":! hoogle --color --count=15 " ++) . escape
:def! hoogle50 return . (":! hoogle --color --count=50 " ++) . escape
:def! hoogleall return . (":! hoogle --color " ++) . escape
:def! doc \s -> return $ ":! hoogle --info --color \"" ++ s ++ "\""
:def pl \s -> return $ ":! pointfree \"" ++ s ++ "\""
